# Generated by Django 4.2.7 on 2025-09-30 22:37

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("district", models.CharField(max_length=100, verbose_name="District")),
                ("sector", models.CharField(max_length=100, verbose_name="Sector")),
                ("cell", models.CharField(max_length=100, verbose_name="Cell")),
                ("village", models.CharField(max_length=100, verbose_name="Village")),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        max_digits=9,
                        null=True,
                        verbose_name="Latitude",
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        max_digits=9,
                        null=True,
                        verbose_name="Longitude",
                    ),
                ),
                (
                    "elevation",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Elevation (meters)"
                    ),
                ),
                (
                    "climate_zone",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Climate Zone"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Location",
                "verbose_name_plural": "Locations",
                "ordering": ["district", "sector", "cell", "village"],
                "indexes": [
                    models.Index(
                        fields=["district", "sector"],
                        name="users_locat_distric_b77e53_idx",
                    ),
                    models.Index(
                        fields=["latitude", "longitude"],
                        name="users_locat_latitud_ea16c3_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "user_type",
                    models.CharField(
                        choices=[
                            ("farmer", "Farmer"),
                            ("trader", "Trader/Aggregator"),
                            ("processor", "Processor/Retailer"),
                            ("consumer", "Consumer"),
                            ("seed_producer", "Seed Producer"),
                            ("admin", "Administrator"),
                        ],
                        default="consumer",
                        max_length=20,
                        verbose_name="User Type",
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        max_length=20, unique=True, verbose_name="Phone Number"
                    ),
                ),
                (
                    "verified_status",
                    models.BooleanField(default=False, verbose_name="Verified"),
                ),
                (
                    "profile_image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="profiles/",
                        verbose_name="Profile Image",
                    ),
                ),
                (
                    "national_id",
                    models.CharField(
                        blank=True, max_length=16, verbose_name="National ID"
                    ),
                ),
                (
                    "cooperative_name",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Cooperative Name"
                    ),
                ),
                (
                    "farm_size",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Farm Size (hectares)",
                    ),
                ),
                (
                    "preferred_language",
                    models.CharField(
                        choices=[
                            ("en", "English"),
                            ("rw", "Kinyarwanda"),
                            ("fr", "French"),
                        ],
                        default="rw",
                        max_length=2,
                        verbose_name="Preferred Language",
                    ),
                ),
                (
                    "wallet_address",
                    models.CharField(
                        blank=True, max_length=42, verbose_name="Wallet Address"
                    ),
                ),
                (
                    "data_consent",
                    models.BooleanField(default=False, verbose_name="Data Consent"),
                ),
                (
                    "consent_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Consent Date"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="users",
                        to="users.location",
                        verbose_name="Location",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "Users",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="UserActivity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "activity_type",
                    models.CharField(
                        choices=[
                            ("login", "Login"),
                            ("product_register", "Product Registration"),
                            ("product_verify", "Product Verification"),
                            ("transaction", "Transaction"),
                            ("qr_scan", "QR Code Scan"),
                        ],
                        max_length=30,
                        verbose_name="Activity Type",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="IP Address"
                    ),
                ),
                (
                    "user_agent",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="User Agent"
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="activities",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Activity",
                "verbose_name_plural": "User Activities",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["user", "-timestamp"],
                        name="users_usera_user_id_f30086_idx",
                    ),
                    models.Index(
                        fields=["activity_type", "-timestamp"],
                        name="users_usera_activit_5e7a89_idx",
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(
                fields=["user_type", "verified_status"],
                name="users_user_user_ty_6df234_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(
                fields=["phone_number"], name="users_user_phone_n_7fe504_idx"
            ),
        ),
    ]

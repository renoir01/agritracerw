# Generated by Django 4.2.7 on 2025-09-30 22:37

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Batch",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "batch_number",
                    models.CharField(
                        db_index=True,
                        max_length=50,
                        unique=True,
                        verbose_name="Batch Number",
                    ),
                ),
                (
                    "seed_variety",
                    models.CharField(max_length=100, verbose_name="Seed Variety"),
                ),
                ("planting_date", models.DateField(verbose_name="Planting Date")),
                (
                    "harvest_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Harvest Date"
                    ),
                ),
                (
                    "total_quantity",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Total Quantity (kg)",
                    ),
                ),
                (
                    "soil_test_results",
                    models.JSONField(
                        blank=True, null=True, verbose_name="Soil Test Results"
                    ),
                ),
                (
                    "blockchain_hash",
                    models.CharField(
                        blank=True, max_length=66, verbose_name="Blockchain Hash"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Batch",
                "verbose_name_plural": "Batches",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Certification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "cert_type",
                    models.CharField(
                        choices=[
                            ("biofortification", "Biofortification Certificate"),
                            ("organic", "Organic Certificate"),
                            ("quality", "Quality Certificate"),
                            ("lab_test", "Laboratory Test"),
                        ],
                        max_length=30,
                        verbose_name="Certificate Type",
                    ),
                ),
                ("issuer", models.CharField(max_length=200, verbose_name="Issuer")),
                ("issue_date", models.DateField(verbose_name="Issue Date")),
                (
                    "expiry_date",
                    models.DateField(blank=True, null=True, verbose_name="Expiry Date"),
                ),
                (
                    "certificate_url",
                    models.URLField(blank=True, verbose_name="Certificate URL"),
                ),
                (
                    "ipfs_hash",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="IPFS Hash"
                    ),
                ),
                (
                    "verified",
                    models.BooleanField(default=False, verbose_name="Verified"),
                ),
                (
                    "certificate_file",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="certificates/",
                        verbose_name="Certificate File",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Certification",
                "verbose_name_plural": "Certifications",
                "ordering": ["-issue_date"],
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Product Name")),
                ("variety", models.CharField(max_length=100, verbose_name="Variety")),
                (
                    "iron_content",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(200),
                        ],
                        verbose_name="Iron Content (ppm)",
                    ),
                ),
                (
                    "biofortified",
                    models.BooleanField(default=True, verbose_name="Biofortified"),
                ),
                (
                    "qr_code",
                    models.CharField(
                        db_index=True,
                        max_length=100,
                        unique=True,
                        verbose_name="QR Code",
                    ),
                ),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Quantity (kg)",
                    ),
                ),
                ("harvest_date", models.DateField(verbose_name="Harvest Date")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("registered", "Registered"),
                            ("in_transit", "In Transit"),
                            ("processed", "Processed"),
                            ("retail", "At Retail"),
                            ("sold", "Sold"),
                        ],
                        default="registered",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "product_image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="products/",
                        verbose_name="Product Image",
                    ),
                ),
                (
                    "ipfs_hash",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="IPFS Hash"
                    ),
                ),
                (
                    "blockchain_hash",
                    models.CharField(
                        blank=True, max_length=66, verbose_name="Blockchain Hash"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Product",
                "verbose_name_plural": "Products",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Verification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "verification_type",
                    models.CharField(
                        choices=[
                            ("qr_scan", "QR Code Scan"),
                            ("manual", "Manual Verification"),
                            ("blockchain", "Blockchain Verification"),
                            ("lab_test", "Laboratory Test"),
                        ],
                        max_length=20,
                        verbose_name="Verification Type",
                    ),
                ),
                (
                    "result",
                    models.CharField(
                        choices=[
                            ("authentic", "Authentic"),
                            ("suspicious", "Suspicious"),
                            ("counterfeit", "Counterfeit"),
                            ("pending", "Pending"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Result",
                    ),
                ),
                ("verified_at", models.DateTimeField(auto_now_add=True)),
                (
                    "verification_method",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Method Details"
                    ),
                ),
                (
                    "confidence_score",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Confidence Score",
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Notes")),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="verifications",
                        to="products.product",
                    ),
                ),
            ],
            options={
                "verbose_name": "Verification",
                "verbose_name_plural": "Verifications",
                "ordering": ["-verified_at"],
            },
        ),
    ]
